console.log('Hola desde app! üëã');

// C√ìDIGO S√çNCRONO/SECUENCIAL
// Un proceso que espera al anterior a ser ejecutado

console.log(1);
console.log(2);
console.log(3);

// C√ìDIGO AS√çNCRONO
// Nos permite correr procesos de manera simult√°nea 
// sin que interrumpa los otros, 
// y la respuesta se procesa hasta habaer sido recibida, 
// evitando la detenci√≥n innecesaria de los procesos

console.log(1);
setTimeout(() => console.log(2), 3000);
console.log(3);

// NOTA:
// JS le da preferencia a los procesos s√≠ncronos
// y a los as√≠ncronos los manda a la pila de ejecuc√≠on "CALL STACk", 
// la cual permite que se ejecuten las tareas de fma adecuadad y sin interrupciones


// CALLSTACK

// const  terceraFuncion = () => {
//     segundaFuncion();
//     console.log('Saludos desde terceraFunci√≥n 3Ô∏è‚É£‚ùó');
// }

// const  segundaFuncion = () => {
//     terceraFuncion();
//     console.log('Saludos desde segundaFunci√≥n 2Ô∏è‚É£‚ùó');
// }

// const  primeraFuncion = () => {
//     segundaFuncion();
//     console.log('Saludos desde primeraFunci√≥n 2Ô∏è‚É£‚ùó');
// }

// primeraFuncion();

// EVENT LOOP / BUCLE DE EVENTOS

const  terceraFuncion = () => {
    setTimeout(() => console.log('Saludos desde terceraFuncion 3Ô∏è‚É£‚ùó'), 3000)
}

const  segundaFuncion = () => {
    terceraFuncion();
    console.log('Saludos desde segundaFunci√≥n 2Ô∏è‚É£‚ùó');
}

const  primeraFuncion = () => {
    segundaFuncion();
    console.log('Saludos desde primeraFunci√≥n 2Ô∏è‚É£‚ùó');
}

primeraFuncion();

// CALLBACK
// Funci√≥n que se pasa como par√°metro/argumento de otra funci√≥n

// Funci√≥n incial /funci√≥n de orden superior
const mostrarDosMensajes = (funcion1, funcion2) => {
    funcion1();
    funcion2();
}

// funciones callback
const yoSoyElCallback1 = () => {
    console.log('Hola desde el callback 1! üñê1Ô∏è‚É£');
}    
const yoSoyElCallback2 = () => {
    console.log('Hola desde el callback 2! üñê2Ô∏è‚É£');    
}

mostrarDosMensajes(yoSoyElCallback1, yoSoyElCallback2)
console.log(mostrarDosMensajes);

// ejemplo callback saludar 

const saudarUsuario = (nombreUsuario, callback) => {
    callback(nombreUsuario)
}
const callbackBienvenida = (nombreUsuario) => {
    console.log('Bienvenidx,' + nombreUsuario);
}
const callbackDespedida = (nombreUsuario) => {
    console.log('Adi√≥s,' + nombreUsuario);
}

saludarUsuario('Eyra', callbackBienvenida);
saludarUsuario('Eyra', callbackDespedida);
